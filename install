#!/bin/bash

# Installer script to set up symlinks for configuration files.
# Assumes it is being run as `./install <path>`, i.e. from the directory
# it lives in.

conf=$(dirname "$0")
conf=${conf-.}
cd $conf
conf=$(pwd -P)

home=${1:-$HOME}

echo "Installing config files from $conf into $home..."

function safe_patch {
  source_orig=$1
  patch=$2
  target=$3

  comment=$(grep 'COMMENT=' $patch | sed 's/^.*COMMENT=//')
  interp=$(head -n 1 $patch | grep '^#!' | sed 's/^#!//')
  comment=${comment:-#}

  if [ ! -e "$target" ] ||
      [ -h "$target" -a "$(readlink $target)" = "$source_orig" ] ||
      grep -q 'DO NOT EDIT' $target; then
    if [ -h "$target" ]; then unlink $target; fi
    cat > $target <<EOF
$comment --------------------------------------------------------------
$comment ATTENTION: THIS FILE IS AUTOMATICALLY GENERATED!  DO NOT EDIT!
$comment Instead edit one of the following
$comment   $source_orig
$comment   $patch
$comment and then re-run $conf/install
$comment --------------------------------------------------------------

EOF
    $interp $patch $source_orig >> $target
  else
    echo "Refusing to write $target: file exists." >&2
  fi
}

function safe_link {
  # figure out filenames
  target=$2
  if [ -z "$target" ]; then
    target=".$1"
  fi
  target="$home/$target"
  source="$conf/$1"

  # check for a hostname-specific patch
  if [ -e $source.patch.$(hostname -s) ]; then
    safe_patch $source $source.patch.$(hostname -s) $target
    return
  fi

  # make the link
  if [ -h "$target" -a "$(readlink $target)" = "$source" ]; then
    # it's already there
    :
  elif [ -s "$target" ]; then
    echo "Cannot symlink "$source" -> "$target": file exists." >&2
  else
    ln -s "$source" "$target"
  fi
}

safe_link Xmodmap
safe_link Xdefaults
safe_link tmux.conf
safe_link bashrc
safe_link gitconfig
safe_link gitignore_global
safe_link gtkrc-2.0
safe_link aspell.en.pws
safe_link dot-emacs .emacs

# Link everything in the bash directory
cd bash
mkdir -p $home/.bash.d
for a in *.sh; do
  safe_link bash/$a .bash.d/$a
done

# Unlink everything in the disabled directory
if [ -d disabled ]; then
  cd disabled
  for a in *.sh; do
    target="$home/.bash.d/$a"
    if [ -h $target -a "$(readlink $target)" = "$conf/bash/$a" ]; then
      rm -f $target
    elif [ -s "$target" ]; then
      echo "Refusing to delete non-symlink $target even though disabled."
    fi
  done
  cd ..
fi
cd ..

# Make bash completion dir so somebody doesn't complain
mkdir -p $home/.bash.d/completion

# Make sure history dir exists
mkdir -p $home/history

# Link all the emacs files
#cd emacs
#mkdir -p $home/.emacs.d
#for a in *.el; do
#  safe_link emacs/$a .emacs.d/$a
#done

# Install the tmux-256color terminfo config
$conf/gen/tmux

# Set up chrome/emacs keybindings using the tool instead
if which gconftool-2 &>/dev/null; then
  gconftool-2 --set /desktop/gnome/interface/gtk_key_theme Emacs --type string
fi
if which gsettings &>/dev/null; then
  gsettings set org.gnome.desktop.interface gtk-key-theme Emacs
fi
